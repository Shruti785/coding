class Solution {
public:
    string multiply(string num1, string num2) {
        if(num1 == "0" || num2 ==  "0") return "0" ;
        
        // * STIRNGs GENERATED BY MULTIPLYING EACH DIGT IN NUM2 WITH NUM1
        vector<string> arr ;
        int pow = 0 ;
        for(int i = num2.length() - 1 ; i >= 0 ; i--){
            int x = num2[i] - '0' ;
            string curr = "" ;
            for(int j = 0 ; j < pow ; j++) curr.push_back('0') ;
            int carry = 0 ;
            for(int j = num1.length() - 1 ; j >= 0 ; j--){
                int y = num1[j] - '0' ;
                int res = (x * y) + carry ;
                carry = res/ 10 ;
                res %= 10 ;
                curr.push_back(to_string(res)[0]) ;
            }
            if(carry != 0) curr.push_back(to_string(carry)[0]) ;
            reverse(curr.begin(),curr.end()) ;
            arr.push_back(curr) ;
            ++pow ;
        }

        if(arr.size() == 1) return arr[0] ;
        
        // * ADD ALL THE STRINGs GENERATED TO GET THE FINAL ANSWER
        string prev = arr[0] ;
        for(int i = 1 ; i < arr.size() ; i++){
            string curr = arr[i] ;
            string temp = "" ;
            int e1 = curr.length() - 1 ;
            int e2 = prev.length() - 1 ;
            int carry = 0 ;
            while(e1 >= 0 || e2 >= 0){
                int a = 0, b = 0 ;
                if(e1 >= 0) a = curr[e1--] - '0' ;
                if(e2 >= 0) b = prev[e2--] - '0' ;
                int res = a + b + carry ;
                carry = res / 10 ;
                res %= 10 ;
                temp.push_back(to_string(res)[0]) ;
            }
            if(carry != 0) temp.push_back(to_string(carry)[0]) ;
            reverse(temp.begin(),temp.end()) ;
            prev = temp ;
        }
        return prev ;
    }
};